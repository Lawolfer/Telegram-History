import threading
import re
import random
import time

class ContentService:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å API"""

    def __init__(self, api_client, logger):
        self.api = api_client
        self.logger = logger

        # –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è Gemini API
        self.system_prompt = """
        –¢—ã - –±–æ—Ç-–∏—Å—Ç–æ—Ä–∏–∫, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏. 
        –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –¥–∞–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –∏ —Ç–æ—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.
        –¢—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–±—ä–µ–∫—Ç–∏–≤–Ω—ã–º –∏ –æ–ø–∏—Ä–∞—Ç—å—Å—è –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç—ã.

        –ü—Ä–∏–Ω—Ü–∏–ø—ã —Ç–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã:
        1. –û—Ç–≤–µ—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º–∏ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏
        2. –ò—Å–ø–æ–ª—å–∑—É–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ—ã, —Å–ø–∏—Å–∫–∏ –∏ –¥—Ä—É–≥–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
        3. –ò–∑–±–µ–≥–∞–π –¥–ª–∏–Ω–Ω—ã—Ö —Å–ø–ª–æ—à–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤
        4. –ü—Ä–∏–≤–æ–¥–∏ –¥–∞—Ç—ã –∏ –∏–º–µ–Ω–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ª–∏—á–Ω–æ—Å—Ç–µ–π
        5. –ù–µ –≤—ã—Å–∫–∞–∑—ã–≤–∞–π –ª–∏—á–Ω—ã—Ö –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –º–Ω–µ–Ω–∏–π
        6. –ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å –æ—Ç–≤–µ—Ç–∞, –ø—Ä–∏–∑–Ω–∞–π —ç—Ç–æ

        –¢–≤–æ—è –∞—É–¥–∏—Ç–æ—Ä–∏—è - —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ—Å—è –∏—Å—Ç–æ—Ä–∏–µ–π –†–æ—Å—Å–∏–∏.
        """

    def get_topic_info(self, topic):
        """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–π —Ç–µ–º–µ"""
        prompt = f"{self.system_prompt}\n\n–ü–æ–¥–≥–æ—Ç–æ–≤—å –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –æ—Ç–≤–µ—Ç –æ —Å–ª–µ–¥—É—é—â–µ–º –ø–µ—Ä–∏–æ–¥–µ/—Å–æ–±—ã—Ç–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏: {topic}. –í–∫–ª—é—á–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è, –¥–∞—Ç—ã, –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ª–∏—á–Ω–æ—Å—Ç–µ–π –∏ –∑–Ω–∞—á–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞. –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º, —Å–æ–¥–µ—Ä–∂–∞—Ç—å 5-7 –∞–±–∑–∞—Ü–µ–≤ –∏ –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ—Å—è –∏—Å—Ç–æ—Ä–∏–µ–π."

        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∏–∑–∫—É—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –¥–ª—è –±–æ–ª–µ–µ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
            response = self.api.generate_response(prompt, temperature=0.3, max_tokens=2048)

            if response:
                self.logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ç–µ–º–µ: {topic}")
                return response
            else:
                return "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —ç—Ç–æ–π —Ç–µ–º–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é —Ç–µ–º—É."
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ç–µ–º–µ {topic}: {e}")
            return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

    def generate_test(self, difficulty):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ—Å—Ç –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏"""
        difficulty_descriptions = {
            "easy": "–±–∞–∑–æ–≤—ã–µ —Ñ–∞–∫—Ç—ã –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏, –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–ª—è —à–∫–æ–ª—å–Ω–∏–∫–æ–≤",
            "medium": "—Ñ–∞–∫—Ç—ã –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏ —Å—Ä–µ–¥–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤",
            "hard": "—Å–ª–æ–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏, —Ç—Ä–µ–±—É—é—â–∏–µ –≥–ª—É–±–æ–∫–∏—Ö –∑–Ω–∞–Ω–∏–π"
        }

        description = difficulty_descriptions.get(difficulty, difficulty_descriptions["medium"])

        prompt = f"{self.system_prompt}\n\n–°–æ–∑–¥–∞–π —Ç–µ—Å—Ç –∏–∑ 5 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏. –°–ª–æ–∂–Ω–æ—Å—Ç—å: {description}. –ö–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å 4 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞, –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π. –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ —É–∫–∞–∂–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç (–Ω–æ–º–µ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–∞). –í–æ–ø—Ä–æ—Å—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–º–∏ –∏ –æ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏."

        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ä–µ–¥–Ω—é—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤
            response = self.api.generate_response(prompt, temperature=0.7, max_tokens=2048)

            if response:
                self.logger.info(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Ç–µ—Å—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏: {difficulty}")
                return response
            else:
                return "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–∞ {difficulty}: {e}")
            return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

    def get_conversation_response(self, question):
        """–ü–æ–ª—É—á–∞–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–µ–∂–∏–º–µ –±–µ—Å–µ–¥—ã"""
        prompt = f"{self.system_prompt}\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å: {question}\n\n–î–∞–π –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –∏ —Ç–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ."

        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ä–µ–¥–Ω—é—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –¥–ª—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
            response = self.api.generate_response(prompt, temperature=0.6, max_tokens=1024)

            if response:
                self.logger.info(f"–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                return response
            else:
                return "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –º–æ–≥—É —Å–µ–π—á–∞—Å –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –∏–ª–∏ –∑–∞–¥–∞—Ç—å –¥—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å."
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å: {e}")
            return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

    def analyze_test_answer(self, question, user_answer, correct_answer):
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤–æ–ø—Ä–æ—Å —Ç–µ—Å—Ç–∞"""
        if user_answer.lower() == correct_answer.lower():
            return True, "–ü—Ä–∞–≤–∏–ª—å–Ω–æ! üëç"
        else:
            return False, f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct_answer}."