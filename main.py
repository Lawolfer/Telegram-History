
import os
import telegram
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, MessageHandler, Filters
import logging
import datetime
import requests
import json
import google.generativeai as genai
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –ª–æ–≥–≥–µ—Ä–∞
logger = logging.getLogger(__name__)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–≥–æ —Ö–µ–Ω–¥–ª–µ—Ä–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
def setup_file_logger():
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if not os.path.exists('logs'):
        os.makedirs('logs')
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –¥–ª—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    current_date = datetime.datetime.now().strftime("%Y%m%d")
    log_file = f'logs/bot_log_{current_date}.log'
    
    # –°–æ–∑–¥–∞–µ–º —Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª
    file_handler = logging.FileHandler(log_file, encoding='utf-8')
    file_handler.setFormatter(logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s'))
    file_handler.setLevel(logging.INFO)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ö–µ–Ω–¥–ª–µ—Ä –∫ –ª–æ–≥–≥–µ—Ä—É
    logger.addHandler(file_handler)
    logger.info(f"–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –≤ —Ñ–∞–π–ª: {log_file}")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API –∫–ª—é—á–∞ Google Gemini
GEMINI_API_KEY = os.getenv('GEMINI_API_KEY')
if not GEMINI_API_KEY:
    logger.error("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç GEMINI_API_KEY –≤ —Ñ–∞–π–ª–µ .env")
    exit(1)

genai.configure(api_key=GEMINI_API_KEY)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π –∫—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
user_contexts = {}

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ Telegram –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
if not TELEGRAM_TOKEN:
    logger.error("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç TELEGRAM_TOKEN –≤ —Ñ–∞–π–ª–µ .env")
    exit(1)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–∑–æ–≤–∞ Gemini API —Å –º–æ–¥–µ–ª—å—é 2.0 Flash
def ask_grok(prompt, max_tokens=1024, temp=0.7):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ API Gemini 2.0 Flash –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç.

    Args:
        prompt (str): –ü—Ä–æ–º–ø—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        max_tokens (int): –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –≤ –æ—Ç–≤–µ—Ç–µ
        temp (float): –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (–∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å) –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏

    Returns:
        str: –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç API
    """
    try:
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–∏
        generation_config = {
            "temperature": temp,
            "top_p": 0.95,
            "top_k": 64,
            "max_output_tokens": max_tokens,
        }

        # –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ —Å –∑–∞–¥–∞–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π, –∏—Å–ø–æ–ª—å–∑—É—è Gemini 2.0 Flash
        model = genai.GenerativeModel(
            model_name="gemini-1.5-flash",  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–¥–µ–ª—å 2.0 Flash –¥–ª—è –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
            generation_config=generation_config
        )

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
        response = model.generate_content(prompt)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –æ—Ç–≤–µ—Ç
        if not response or not response.text:
            logger.error(f"API –≤–µ—Ä–Ω—É–ª –æ—Ç–≤–µ—Ç –±–µ–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ: {response}")
            return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        
        return response.text
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ API Gemini: {e}")
        return f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}"

# –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–∏–æ–¥—ã –∏ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –º–µ–Ω—é
HISTORICAL_PERIODS = {
    "ancient_rus": "–î—Ä–µ–≤–Ω—è—è –†—É—Å—å (IX-XIII –≤–µ–∫–∞)",
    "mongol_invasion": "–ú–æ–Ω–≥–æ–ª—å—Å–∫–æ–µ –Ω–∞—à–µ—Å—Ç–≤–∏–µ (XIII-XV –≤–µ–∫–∞)",
    "moscow_state": "–ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ (XV-XVII –≤–µ–∫–∞)",
    "russian_empire": "–†–æ—Å—Å–∏–π—Å–∫–∞—è –∏–º–ø–µ—Ä–∏—è (XVIII-XX –≤–µ–∫–∞)",
    "revolution": "–†–µ–≤–æ–ª—é—Ü–∏—è –∏ –ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∞—è –≤–æ–π–Ω–∞ (1917-1922)",
    "soviet_union": "–°–°–°–† (1922-1991)",
    "modern_russia": "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –†–æ—Å—Å–∏—è (—Å 1991)"
}

# –í–∞–∂–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏
HISTORICAL_FIGURES = {
    "rurik": "–†—é—Ä–∏–∫",
    "vladimir": "–í–ª–∞–¥–∏–º–∏—Ä –í–µ–ª–∏–∫–∏–π",
    "nevsky": "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ù–µ–≤—Å–∫–∏–π",
    "ivan_terrible": "–ò–≤–∞–Ω –ì—Ä–æ–∑–Ω—ã–π",
    "peter_great": "–ü—ë—Ç—Ä I –í–µ–ª–∏–∫–∏–π",
    "catherine_great": "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ II –í–µ–ª–∏–∫–∞—è",
    "alexander_ii": "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä II –û—Å–≤–æ–±–æ–¥–∏—Ç–µ–ª—å",
    "nicholas_ii": "–ù–∏–∫–æ–ª–∞–π II",
    "lenin": "–í.–ò. –õ–µ–Ω–∏–Ω",
    "stalin": "–ò.–í. –°—Ç–∞–ª–∏–Ω",
    "khrushchev": "–ù.–°. –•—Ä—É—â—ë–≤",
    "gorbachev": "–ú.–°. –ì–æ—Ä–±–∞—á—ë–≤",
    "yeltsin": "–ë.–ù. –ï–ª—å—Ü–∏–Ω",
    "putin": "–í.–í. –ü—É—Ç–∏–Ω"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def get_main_menu_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞"""
    keyboard = [
        [InlineKeyboardButton("üèõ –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–∏–æ–¥—ã", callback_data='periods')],
        [InlineKeyboardButton("üëë –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏", callback_data='figures')],
        [InlineKeyboardButton("üéì –¢–µ—Å—Ç—ã –ø–æ –∏—Å—Ç–æ—Ä–∏–∏", callback_data='tests')],
        [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data='stats')],
        [InlineKeyboardButton("‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data='about')]
    ]
    return InlineKeyboardMarkup(keyboard)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é –ø–µ—Ä–∏–æ–¥–æ–≤
def get_periods_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞"""
    keyboard = []
    for period_id, period_name in HISTORICAL_PERIODS.items():
        keyboard.append([InlineKeyboardButton(period_name, callback_data=f'period_{period_id}')])
    keyboard.append([InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='main_menu')])
    return InlineKeyboardMarkup(keyboard)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ª–∏—á–Ω–æ—Å—Ç–µ–π
def get_figures_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–π –ª–∏—á–Ω–æ—Å—Ç–∏"""
    keyboard = []
    row = []
    for i, (figure_id, figure_name) in enumerate(HISTORICAL_FIGURES.items()):
        row.append(InlineKeyboardButton(figure_name, callback_data=f'figure_{figure_id}'))
        if (i + 1) % 2 == 0 or i == len(HISTORICAL_FIGURES) - 1:
            keyboard.append(row)
            row = []
    keyboard.append([InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='main_menu')])
    return InlineKeyboardMarkup(keyboard)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é —Ç–µ—Å—Ç–æ–≤
def get_tests_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é —Ç–µ—Å—Ç–æ–≤"""
    keyboard = [
        [InlineKeyboardButton("üß† –ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç (10 –≤–æ–ø—Ä–æ—Å–æ–≤)", callback_data='test_basic')],
        [InlineKeyboardButton("üî¨ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ç–µ—Å—Ç (20 –≤–æ–ø—Ä–æ—Å–æ–≤)", callback_data='test_advanced')],
        [InlineKeyboardButton("üéØ –¢–µ—Å—Ç –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–µ—Ä–∏–æ–¥—É", callback_data='test_period')],
        [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='main_menu')]
    ]
    return InlineKeyboardMarkup(keyboard)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∞
def get_test_periods_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∞"""
    keyboard = []
    for period_id, period_name in HISTORICAL_PERIODS.items():
        keyboard.append([InlineKeyboardButton(period_name, callback_data=f'test_period_{period_id}')])
    keyboard.append([InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Ç–µ—Å—Ç–∞–º", callback_data='tests')])
    return InlineKeyboardMarkup(keyboard)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
def start(update, context):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start"""
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user = update.effective_user
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} ({user.username}) –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    welcome_message = (
        f"üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.first_name}!\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏! üá∑üá∫\n\n"
        "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –∏–∑—É—á–∏—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è, –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–∏–æ–¥—ã "
        "–∏ –≤—ã–¥–∞—é—â–∏—Ö—Å—è –ª–∏—á–Ω–æ—Å—Ç–µ–π —Ä–æ—Å—Å–∏–π—Å–∫–æ–π –∏—Å—Ç–æ—Ä–∏–∏.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é –Ω–∏–∂–µ:"
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
    update.message.reply_text(welcome_message, reply_markup=get_main_menu_keyboard())

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
def button_handler(update, context):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é"""
    query = update.callback_query
    query.answer()  # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback –∑–∞–ø—Ä–æ—Å
    
    user_id = query.from_user.id
    callback_data = query.data
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É: {callback_data}")
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
    if callback_data == 'main_menu':
        query.edit_message_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª:",
            reply_markup=get_main_menu_keyboard()
        )
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≤ –º–µ–Ω—é –ø–µ—Ä–∏–æ–¥–æ–≤
    elif callback_data == 'periods':
        query.edit_message_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–∏–æ–¥, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –Ω—ë–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ:",
            reply_markup=get_periods_keyboard()
        )
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞
    elif callback_data.startswith('period_'):
        period_id = callback_data.replace('period_', '')
        period_name = HISTORICAL_PERIODS.get(period_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–µ—Ä–∏–æ–¥–µ
        prompt = (
            f"–†–∞—Å—Å–∫–∞–∂–∏ –ø–æ–¥—Ä–æ–±–Ω–æ –æ–± –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–º –ø–µ—Ä–∏–æ–¥–µ –†–æ—Å—Å–∏–∏: {period_name}.\n"
            "–í–∫–ª—é—á–∏ –∫–ª—é—á–µ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è, –¥–∞—Ç—ã, –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∏ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏.\n"
            "–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–∏, –≤—ã–¥–µ–ª–∏ –≤–∞–∂–Ω–µ–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è –∏ –ª–∏—á–Ω–æ—Å—Ç–∏ –ø–µ—Ä–∏–æ–¥–∞.\n"
            "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏ —Ç–æ—á–Ω–æ–π –∏ –æ–±—ä–µ–∫—Ç–∏–≤–Ω–æ–π."
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
        query.edit_message_text(f"‚è≥ –ó–∞–≥—Ä—É–∂–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä–∏–æ–¥–µ ¬´{period_name}¬ª...")
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç API
        response = ask_grok(prompt, max_tokens=2048, temp=0.3)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
        keyboard = [[InlineKeyboardButton("‚óÄÔ∏è –ö —Å–ø–∏—Å–∫—É –ø–µ—Ä–∏–æ–¥–æ–≤", callback_data='periods')]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä–∏–æ–¥–µ
        query.edit_message_text(
            f"*{period_name}*\n\n{response}",
            parse_mode=telegram.ParseMode.MARKDOWN,
            reply_markup=reply_markup
        )
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≤ –º–µ–Ω—é –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ª–∏—á–Ω–æ—Å—Ç–µ–π
    elif callback_data == 'figures':
        query.edit_message_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫—É—é –ª–∏—á–Ω–æ—Å—Ç—å, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –Ω–µ–π –ø–æ–¥—Ä–æ–±–Ω–µ–µ:",
            reply_markup=get_figures_keyboard()
        )
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–π –ª–∏—á–Ω–æ—Å—Ç–∏
    elif callback_data.startswith('figure_'):
        figure_id = callback_data.replace('figure_', '')
        figure_name = HISTORICAL_FIGURES.get(figure_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ª–∏—á–Ω–æ—Å—Ç—å")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–∏—á–Ω–æ—Å—Ç–∏
        prompt = (
            f"–†–∞—Å—Å–∫–∞–∂–∏ –ø–æ–¥—Ä–æ–±–Ω–æ –æ–± –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–π –ª–∏—á–Ω–æ—Å—Ç–∏ –†–æ—Å—Å–∏–∏: {figure_name}.\n"
            "–í–∫–ª—é—á–∏ –±–∏–æ–≥—Ä–∞—Ñ–∏—é, –∫–ª—é—á–µ–≤—ã–µ –¥–∞—Ç—ã, –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –∏—Å—Ç–æ—Ä–∏—é –†–æ—Å—Å–∏–∏.\n"
            "–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –≤—ã–¥–µ–ª–∏–≤ –æ—Å–Ω–æ–≤–Ω—ã–µ —ç—Ç–∞–ø—ã –∂–∏–∑–Ω–∏ –∏ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.\n"
            "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏ —Ç–æ—á–Ω–æ–π –∏ –æ–±—ä–µ–∫—Ç–∏–≤–Ω–æ–π."
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
        query.edit_message_text(f"‚è≥ –ó–∞–≥—Ä—É–∂–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏—á–Ω–æ—Å—Ç–∏ ¬´{figure_name}¬ª...")
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç API
        response = ask_grok(prompt, max_tokens=1800, temp=0.3)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
        keyboard = [[InlineKeyboardButton("‚óÄÔ∏è –ö —Å–ø–∏—Å–∫—É –ª–∏—á–Ω–æ—Å—Ç–µ–π", callback_data='figures')]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏—á–Ω–æ—Å—Ç–∏
        query.edit_message_text(
            f"*{figure_name}*\n\n{response}",
            parse_mode=telegram.ParseMode.MARKDOWN,
            reply_markup=reply_markup
        )
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≤ –º–µ–Ω—é —Ç–µ—Å—Ç–æ–≤
    elif callback_data == 'tests':
        query.edit_message_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ç–µ—Å—Ç–∞ –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏:",
            reply_markup=get_tests_keyboard()
        )
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–µ—Å—Ç–∞ –ø–æ –ø–µ—Ä–∏–æ–¥—É
    elif callback_data == 'test_period':
        query.edit_message_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–∏–æ–¥ –¥–ª—è —Ç–µ—Å—Ç–∞:",
            reply_markup=get_test_periods_keyboard()
        )
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∞
    elif callback_data.startswith('test_period_'):
        period_id = callback_data.replace('test_period_', '')
        period_name = HISTORICAL_PERIODS.get(period_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–∞
        prompt = (
            f"–°–æ–∑–¥–∞–π —Ç–µ—Å—Ç –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏ –Ω–∞ —Ç–µ–º—É: {period_name}.\n"
            "–¢–µ—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 5 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å —Ä–∞–∑–Ω—ã–º —É—Ä–æ–≤–Ω–µ–º —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.\n"
            "–ö–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å 4 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞, –æ–¥–∏–Ω –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º.\n"
            "–ü–æ–º–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –∑–Ω–∞–∫–æ–º (‚úì).\n"
            "–í–æ–ø—Ä–æ—Å—ã –¥–æ–ª–∂–Ω—ã –∫–∞—Å–∞—Ç—å—Å—è –∫–ª—é—á–µ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π, –ª–∏—á–Ω–æ—Å—Ç–µ–π –∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø–µ—Ä–∏–æ–¥–∞.\n"
            "–í –∫–æ–Ω—Ü–µ –ø—Ä–∏–≤–µ–¥–∏ –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–π –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏ —ç—Ç–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞."
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
        query.edit_message_text(f"‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–µ—Å—Ç –ø–æ –ø–µ—Ä–∏–æ–¥—É ¬´{period_name}¬ª...")
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç API
        response = ask_grok(prompt, max_tokens=2048, temp=0.7)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
        keyboard = [[InlineKeyboardButton("‚óÄÔ∏è –ö –≤—ã–±–æ—Ä—É —Ç–µ—Å—Ç–æ–≤", callback_data='tests')]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ—Å—Ç
        query.edit_message_text(
            f"*–¢–µ—Å—Ç –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏: {period_name}*\n\n{response}",
            parse_mode=telegram.ParseMode.MARKDOWN,
            reply_markup=reply_markup
        )
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –±–∞–∑–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–∞
    elif callback_data == 'test_basic':
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–∞
        prompt = (
            "–°–æ–∑–¥–∞–π –±–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏.\n"
            "–¢–µ—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 10 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å –±–∞–∑–æ–≤—ã–º —É—Ä–æ–≤–Ω–µ–º —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –æ—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏—Ö —Ä–∞–∑–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏.\n"
            "–ö–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å 4 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞, –æ–¥–∏–Ω –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º.\n"
            "–ü–æ–º–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –∑–Ω–∞–∫–æ–º (‚úì).\n"
            "–í–æ–ø—Ä–æ—Å—ã –¥–æ–ª–∂–Ω—ã –∫–∞—Å–∞—Ç—å—Å—è –∫–ª—é—á–µ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π, –¥–∞—Ç, –ª–∏—á–Ω–æ—Å—Ç–µ–π –∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏."
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
        query.edit_message_text("‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –±–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏...")
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç API
        response = ask_grok(prompt, max_tokens=2048, temp=0.7)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
        keyboard = [[InlineKeyboardButton("‚óÄÔ∏è –ö –≤—ã–±–æ—Ä—É —Ç–µ—Å—Ç–æ–≤", callback_data='tests')]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ—Å—Ç
        query.edit_message_text(
            "*–ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏*\n\n{response}",
            parse_mode=telegram.ParseMode.MARKDOWN,
            reply_markup=reply_markup
        )
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞
    elif callback_data == 'test_advanced':
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–∞
        prompt = (
            "–°–æ–∑–¥–∞–π –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ç–µ—Å—Ç –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏.\n"
            "–¢–µ—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 20 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –æ—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏—Ö —Ä–∞–∑–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏.\n"
            "–ö–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å 4 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞, –æ–¥–∏–Ω –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º.\n"
            "–ü–æ–º–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –∑–Ω–∞–∫–æ–º (‚úì).\n"
            "–í–æ–ø—Ä–æ—Å—ã –¥–æ–ª–∂–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–µ—Ç–∞–ª–∏, –º–µ–Ω–µ–µ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ —Ñ–∞–∫—Ç—ã –∏ —Ç—Ä–µ–±–æ–≤–∞—Ç—å –≥–ª—É–±–æ–∫–æ–≥–æ –∑–Ω–∞–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏."
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
        query.edit_message_text("‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ç–µ—Å—Ç –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏...")
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç API
        response = ask_grok(prompt, max_tokens=2048, temp=0.7)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
        keyboard = [[InlineKeyboardButton("‚óÄÔ∏è –ö –≤—ã–±–æ—Ä—É —Ç–µ—Å—Ç–æ–≤", callback_data='tests')]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ—Å—Ç
        query.edit_message_text(
            "*–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ç–µ—Å—Ç –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏*\n\n{response}",
            parse_mode=telegram.ParseMode.MARKDOWN,
            reply_markup=reply_markup
        )
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    elif callback_data == 'stats':
        # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–≤ –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞)
        stats_message = (
            "*–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞*\n\n"
            "üìä –§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö.\n\n"
            "–í –±—É–¥—É—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö –∑–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è:\n"
            "‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤\n"
            "‚Ä¢ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å\n"
            "‚Ä¢ –ù–∞–∏–±–æ–ª–µ–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–º—ã\n"
            "‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\n\n"
            "–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏!"
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
        keyboard = [[InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='main_menu')]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        query.edit_message_text(
            stats_message,
            parse_mode=telegram.ParseMode.MARKDOWN,
            reply_markup=reply_markup
        )
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
    elif callback_data == 'about':
        about_message = (
            "*–û –±–æ—Ç–µ ¬´–ò—Å—Ç–æ—Ä–∏—è –†–æ—Å—Å–∏–∏¬ª*\n\n"
            "ü§ñ –≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏ –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.\n\n"
            "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞:\n"
            "‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ø–µ—Ä–∏–æ–¥–∞—Ö\n"
            "‚Ä¢ –ë–∏–æ–≥—Ä–∞—Ñ–∏–∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ª–∏—á–Ω–æ—Å—Ç–µ–π\n"
            "‚Ä¢ –¢–µ—Å—Ç—ã —Ä–∞–∑–Ω–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏\n"
            "‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ\n\n"
            "–ë–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –æ—Ç Google Gemini –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞.\n\n"
            "üìù –ó–∞–¥–∞–π—Ç–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏, –∏ –±–æ—Ç –ø–æ—Å—Ç–∞—Ä–∞–µ—Ç—Å—è –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∏—Ç—å!\n\n"
            "üîÑ –í–µ—Ä—Å–∏—è: 1.0 (–ú–∞—Ä—Ç 2025)"
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
        keyboard = [[InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='main_menu')]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        query.edit_message_text(
            about_message,
            parse_mode=telegram.ParseMode.MARKDOWN,
            reply_markup=reply_markup
        )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
def handle_message(update, context):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ —Å–æ–æ–±—â–µ–Ω–∏–∏
    user = update.effective_user
    message_text = update.message.text
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user.id} ({user.username}): {message_text[:50]}" + ("..." if len(message_text) > 50 else ""))
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è
    if len(message_text) > 500:
        update.message.reply_text(
            "‚ùó –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–≥—Ä–∞–Ω–∏—á—å—Ç–µ—Å—å 500 —Å–∏–º–≤–æ–ª–∞–º–∏.",
            reply_markup=get_main_menu_keyboard()
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –ª–∏ –≤–æ–ø—Ä–æ—Å –∫ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏
    check_prompt = f"–ü—Ä–æ–≤–µ—Ä—å, –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –ª–∏ —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å –∫ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏: \"{message_text}\". –û—Ç–≤–µ—Ç—å —Ç–æ–ª—å–∫–æ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'."
    is_history_related = ask_grok(check_prompt, max_tokens=50, temp=0.1).lower().strip()
    
    # –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏
    if '–Ω–µ—Ç' in is_history_related:
        update.message.reply_text(
            "‚ö†Ô∏è –Ø —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å —Ç–æ–ª—å–∫–æ –Ω–∞ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏.\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å –∏—Å—Ç–æ—Ä–∏–µ–π –†–æ—Å—Å–∏–∏, "
            "–∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–π –≤–∞—Å —Ç–µ–º—ã.",
            reply_markup=get_main_menu_keyboard()
        )
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
    context.bot.send_chat_action(chat_id=update.effective_chat.id, action=telegram.ChatAction.TYPING)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å
    prompt = (
        f"–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏: \"{message_text}\"\n\n"
        "–¢–≤–æ–π –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å:\n"
        "1. –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏ —Ç–æ—á–Ω—ã–º –∏ –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–º –Ω–∞ —Ñ–∞–∫—Ç–∞—Ö\n"
        "2. –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—ã–º\n"
        "3. –•–æ—Ä–æ—à–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º\n"
        "4. –° —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∫–ª—é—á–µ–≤—ã—Ö –¥–∞—Ç, –∏–º–µ–Ω –∏ —Å–æ–±—ã—Ç–∏–π\n\n"
        "–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–Ω—è—Ç–µ–Ω —á–µ–ª–æ–≤–µ–∫—É –±–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∑–Ω–∞–Ω–∏–π –ø–æ –∏—Å—Ç–æ—Ä–∏–∏."
    )
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç API
    response = ask_grok(prompt, max_tokens=1800, temp=0.3)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∫–Ω–æ–ø–∫–æ–π –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    keyboard = [[InlineKeyboardButton("‚óÄÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='main_menu')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    update.message.reply_text(
        response,
        reply_markup=reply_markup,
        parse_mode=telegram.ParseMode.MARKDOWN
    )

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ñ–∞–π–ª
    setup_file_logger()
    logger.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Updater –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–º—É —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    updater = Updater(TELEGRAM_TOKEN)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    dp = updater.dispatcher
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    dp.add_handler(CommandHandler("start", start))
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
    dp.add_handler(CallbackQueryHandler(button_handler))
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
    updater.start_polling()
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞, –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç—ã Ctrl+C
    updater.idle()

if __name__ == '__main__':
    main()
