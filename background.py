import os
import re
from flask import Flask, render_template, jsonify, request
from datetime import datetime
import threading
import logging
from logging.handlers import RotatingFileHandler

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = Flask(__name__)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è Flask
log_formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
# –û—á–∏—â–∞–µ–º –ª–æ–≥ Flask –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
flask_log_path = 'flask_log.log'
try:
    # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –¥–ª—è –∑–∞–ø–∏—Å–∏ (—á—Ç–æ –æ—á–∏—â–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ)
    if os.path.exists(flask_log_path):
        with open(flask_log_path, 'w') as f:
            f.write("")
    print(f"–õ–æ–≥ Flask –æ—á–∏—â–µ–Ω –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞: {flask_log_path}")
except Exception as e:
    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ª–æ–≥–∞ Flask: {e}")

flask_handler = RotatingFileHandler(flask_log_path, maxBytes=10485760, backupCount=3)
flask_handler.setFormatter(log_formatter)
app.logger.addHandler(flask_handler)
app.logger.setLevel(logging.INFO)

# –®–∞–±–ª–æ–Ω HTML –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–≥–æ–≤
HTML_TEMPLATE = """
<!DOCTYPE html>
<html>
<head>
    <title>–õ–æ–≥–∏ –±–æ—Ç–∞ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        h1 {
            color: #333;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
            text-align: center;
        }
        h2 {
            color: #444;
            margin-top: 20px;
        }
        .log-container {
            height: 600px;
            overflow-y: auto;
            background-color: #f9f9f9;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 3px;
            margin-bottom: 20px;
        }
        .log-entry {
            margin-bottom: 5px;
            padding: 5px;
            border-bottom: 1px solid #eee;
        }
        .error { color: #d9534f; font-weight: bold; }
        .warning { color: #f0ad4e; }
        .info { color: #5bc0de; }
        .debug { color: #5cb85c; }
        .critical { color: #ff0000; background-color: #ffecec; font-weight: bold; padding: 5px; }

        .controls {
            margin-bottom: 20px;
        }
        button {
            background-color: #337ab7;
            color: white;
            border: none;
            padding: 8px 16px;
            cursor: pointer;
            border-radius: 3px;
            margin-right: 10px;
        }
        button:hover {
            background-color: #286090;
        }
        .filter-group {
            margin: 10px 0;
        }
        .filter-group label {
            margin-right: 10px;
        }

        /* –ù–æ–≤—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */
        .navigation {
            display: flex;
            justify-content: center;
            margin: 20px 0;
            border-bottom: 1px solid #ddd;
            padding-bottom: 15px;
        }

        .nav-button {
            background-color: #f8f9fa;
            color: #444;
            border: 1px solid #ddd;
            padding: 10px 20px;
            margin: 0 10px;
            cursor: pointer;
            border-radius: 5px;
            font-size: 16px;
            transition: all 0.3s ease;
        }

        .nav-button:hover {
            background-color: #e9ecef;
        }

        .nav-button.active {
            background-color: #337ab7;
            color: white;
            border-color: #2e6da4;
        }

        #main-section {
            text-align: center;
            padding: 20px;
            line-height: 1.6;
        }

        #main-section p {
            margin-bottom: 15px;
            font-size: 16px;
        }

        /* –°—Ç–∏–ª–∏ –¥–ª—è —á–∞—Ç–∞ */
        .chat-container {
            max-width: 90%;
            width: 100%;
            min-width: auto;
            margin: 20px auto;
            border: 1px solid #ddd;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 3px 10px rgba(0,0,0,0.1);
        }

        @media (max-width: 768px) {
            .chat-container {
                max-width: 95%;
                margin: 10px auto;
            }

            .chat-messages {
                height: 400px;
            }

            .chat-input input {
                padding: 8px 12px;
            }

            .chat-input button {
                padding: 8px 15px;
            }
        }

        @media (max-width: 480px) {
            .chat-container {
                max-width: 100%;
                margin: 5px auto;
            }

            .chat-header {
                padding: 12px;
                font-size: 16px;
            }

            .chat-messages {
                height: 350px;
                padding: 10px;
            }

            .message {
                max-width: 90%;
                padding: 8px 12px;
            }
        }

        .chat-header {
            background-color: #337ab7;
            color: white;
            padding: 18px;
            text-align: center;
            font-weight: bold;
            font-size: 18px;
        }

        .chat-messages {
            height: 500px;
            overflow-y: auto;
            padding: 20px;
            background-color: #f9f9f9;
        }

        .message {
            margin-bottom: 15px;
            padding: 12px 16px;
            border-radius: 12px;
            max-width: 80%;
            line-height: 1.4;
            box-shadow: 0 1px 2px rgba(0,0,0,0.1);
        }

        .user-message {
            background-color: #DCF8C6;
            margin-left: auto;
            text-align: right;
            border-top-right-radius: 4px;
        }

        .bot-message {
            background-color: #E9EAEC;
            margin-right: auto;
            border-top-left-radius: 4px;
        }

        .chat-input {
            display: flex;
            flex-direction: column;
            padding: 15px;
            background-color: #f0f0f0;
            border-top: 1px solid #ddd;
        }

        .chat-button-container {
            display: flex;
            justify-content: center;
            margin-top: 10px;
        }

        .chat-input input {
            flex-grow: 1;
            padding: 12px 15px;
            border: 1px solid #ccc;
            border-radius: 20px;
            margin-right: 12px;
            font-size: 16px;
            outline: none;
            transition: border-color 0.3s;
        }

        .chat-input input:focus {
            border-color: #337ab7;
            box-shadow: 0 0 5px rgba(51, 122, 183, 0.3);
        }

        .chat-input button {
            background-color: #337ab7;
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: 20px;
            cursor: pointer;
            font-weight: bold;
            transition: background-color 0.3s;
            width: 50%;
            max-width: 200px;
        }

        .chat-input button:hover {
            background-color: #2e6da4;
        }

        .typing-indicator {
            padding: 10px;
            color: #777;
            font-style: italic;
            display: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏</h1>

        <div class="navigation">
            <button onclick="showLogs()" class="nav-button" id="logs-btn">–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤</button>
            <button onclick="showMainPage()" class="nav-button active" id="main-btn">–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</button>
            <a href="/download/presentation" class="nav-button" style="text-decoration: none;">
                üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è
            </a>
        </div>

        <div id="logs-section" style="display: none;">
            <h2>–õ–æ–≥–∏ –±–æ—Ç–∞</h2>
            <div class="controls">
                <button onclick="refreshLogs()">–û–±–Ω–æ–≤–∏—Ç—å –ª–æ–≥–∏</button>
                <button onclick="clearFilters()">–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</button>

                <div class="filter-group">
                    <label><input type="checkbox" id="show-error" checked> –û—à–∏–±–∫–∏</label>
                    <label><input type="checkbox" id="show-warning" checked> –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è</label>
                    <label><input type="checkbox" id="show-info" checked> –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</label>
                    <label><input type="checkbox" id="show-debug" checked> –û—Ç–ª–∞–¥–∫–∞</label>
                    <label><input type="checkbox" id="show-critical" checked> –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ</label>
                </div>
            </div>
            <div class="log-container" id="logs"></div>
        </div>

        <div id="main-section">
            <h2>–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</h2>
            <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏!</p>
            <p>–≠—Ç–æ—Ç –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ª–æ–≥–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –µ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.</p>
            <p>–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤" –≤–≤–µ—Ä—Ö—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã.</p>
            <div style="text-align: center; margin: 20px 0;">
                <a href="/download/presentation" 
                   style="background-color: #337ab7; color: white; padding: 10px 20px; 
                          text-decoration: none; border-radius: 5px; font-weight: bold;">
                    üìÑ –°–∫–∞—á–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –±–æ—Ç–∞
                </a>
            </div>
            <p>–ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å –±–æ—Ç–æ–º, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–∞—Ç –Ω–∏–∂–µ:</p>
            <div class="chat-container">
                <div class="chat-header">–ß–∞—Ç —Å –±–æ—Ç–æ–º</div>
                <div class="chat-messages" id="chat-messages"></div>
                <div class="chat-input">
                    <input type="text" id="chat-input" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...">
                    <div class="chat-button-container">
                        <button onclick="sendMessage()">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
                    </div>
                </div>
                <div class="typing-indicator" id="typing-indicator">–ë–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç...</div>
            </div>
        </div>

    </div>
    <footer style="text-align: center; margin-top: 20px; font-size: 14px;">
        ¬© 2025 Silver Raven. –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –±–æ—Ç –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.<br>
        <span style="font-size: 12px; color: #666;">–í–µ—Ä—Å–∏—è 1.2.0 ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Google Gemini API</span>
    </footer>
    <script>
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–æ–≥–æ–≤
        function refreshLogs() {
            fetch('/api/logs')
                .then(response => response.json())
                .then(data => {
                    const logsContainer = document.getElementById('logs');
                    logsContainer.innerHTML = '';

                    data.logs.forEach(log => {
                        if (shouldDisplayLog(log)) {
                            const logElement = document.createElement('div');
                            logElement.className = `log-entry ${getLogLevelClass(log)}`;
                            logElement.textContent = log;
                            logsContainer.appendChild(logElement);
                        }
                    });

                    // –ê–≤—Ç–æ—Å–∫—Ä–æ–ª–ª –≤–Ω–∏–∑
                    logsContainer.scrollTop = logsContainer.scrollHeight;
                })
                .catch(error => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ª–æ–≥–æ–≤:', error));
        }

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–∞ CSS –Ω–∞ –æ—Å–Ω–æ–≤–µ —É—Ä–æ–≤–Ω—è –ª–æ–≥–∞
        function getLogLevelClass(logText) {
            if (logText.includes(' ERROR ') || logText.includes(' - ERROR - ')) return 'error';
            if (logText.includes(' WARNING ') || logText.includes(' - WARNING - ')) return 'warning';
            if (logText.includes(' INFO ') || logText.includes(' - INFO - ')) return 'info';
            if (logText.includes(' DEBUG ') || logText.includes(' - DEBUG - ')) return 'debug';
            if (logText.includes(' CRITICAL ') || logText.includes(' - CRITICAL - ')) return 'critical';
            return '';
        }

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –ª–æ–≥ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        function shouldDisplayLog(logText) {
            const showError = document.getElementById('show-error').checked;
            const showWarning = document.getElementById('show-warning').checked;
            const showInfo = document.getElementById('show-info').checked;
            const showDebug = document.getElementById('show-debug').checked;
            const showCritical = document.getElementById('show-critical').checked;

            const logClass = getLogLevelClass(logText);

            if (logClass === 'error' && !showError) return false;
            if (logClass === 'warning' && !showWarning) return false;
            if (logClass === 'info' && !showInfo) return false;
            if (logClass === 'debug' && !showDebug) return false;
            if (logClass === 'critical' && !showCritical) return false;

            return true;
        }

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        function clearFilters() {
            document.getElementById('show-error').checked = true;
            document.getElementById('show-warning').checked = true;
            document.getElementById('show-info').checked = true;
            document.getElementById('show-debug').checked = true;
            document.getElementById('show-critical').checked = true;
            refreshLogs();
        }

        // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–µ–∂–¥—É —Ä–∞–∑–¥–µ–ª–∞–º–∏
        function showLogs() {
            document.getElementById('logs-section').style.display = 'block';
            document.getElementById('main-section').style.display = 'none';
            document.getElementById('logs-btn').classList.add('active');
            document.getElementById('main-btn').classList.remove('active');
            refreshLogs(); // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–≥–∏ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É
        }

        function showMainPage() {
            document.getElementById('logs-section').style.display = 'none';
            document.getElementById('main-section').style.display = 'block';
            document.getElementById('main-btn').classList.add('active');
            document.getElementById('logs-btn').classList.remove('active');
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–≥–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.addEventListener('DOMContentLoaded', function() {
            refreshLogs();
            // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–≥–∏ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–∞ –≤–∫–ª–∞–¥–∫–∞ –ª–æ–≥–æ–≤
            setInterval(function() {
                if (document.getElementById('logs-section').style.display !== 'none') {
                    refreshLogs();
                }
            }, 5000);
        });


        // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —á–∞—Ç–∞
        function sendMessage() {
            const messageInput = document.getElementById('chat-input');
            const message = messageInput.value.trim();

            if (!message) return; // –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            addMessage(message, 'user-message');

            // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
            messageInput.value = '';

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä "–±–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç"
            document.getElementById('typing-indicator').style.display = 'block';

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            fetch('/api/chat', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ message: message }),
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞');
                }
                return response.json();
            })
            .then(data => {
                // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä "–±–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç"
                document.getElementById('typing-indicator').style.display = 'none';

                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
                addMessage(data.response, 'bot-message');

                // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —á–∞—Ç –≤–Ω–∏–∑
                const chatMessages = document.getElementById('chat-messages');
                chatMessages.scrollTop = chatMessages.scrollHeight;
            })
            .catch(error => {
                console.error('–û—à–∏–±–∫–∞:', error);
                // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä "–±–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç"
                document.getElementById('typing-indicator').style.display = 'none';

                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                addMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', 'bot-message');
            });
        }

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
        function addMessage(text, className) {
            const chatMessages = document.getElementById('chat-messages');
            const messageElement = document.createElement('div');
            messageElement.className = `message ${className}`;
            messageElement.textContent = text;
            chatMessages.appendChild(messageElement);

            // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —á–∞—Ç –≤–Ω–∏–∑
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è Enter –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
        document.addEventListener('DOMContentLoaded', function() {
            const inputField = document.getElementById('chat-input');
            if (inputField) {
                inputField.addEventListener('keypress', function(e) {
                    if (e.key === 'Enter') {
                        e.preventDefault();
                        sendMessage();
                    }
                });
            }
        });
    </script>
</body>
</html>
"""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —á—Ç–µ–Ω–∏—è –ª–æ–≥–æ–≤ —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –æ—à–∏–±–æ–∫
def read_logs():
    logs = []

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ logs
    log_dir = "logs"
    if os.path.exists(log_dir):
        log_files = [f for f in os.listdir(log_dir) if f.startswith('bot_log_') and f.endswith('.log')]
    else:
        # –ï—Å–ª–∏ –Ω–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ logs, –∏—â–µ–º –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        log_files = [f for f in os.listdir('.') if f.startswith('bot_log_') and f.endswith('.log')]

    # –ï—Å–ª–∏ –ª–æ–≥–æ–≤ –Ω–µ—Ç —Å–æ–≤—Å–µ–º, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if not log_files:
        return ["–õ–æ–≥-—Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ–≥–æ–≤."]

    # –ü–∞—Ç—Ç–µ—Ä–Ω—ã —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏
    error_patterns = {
        r'ConnectionError': '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≤–Ω–µ—à–Ω–µ–º—É API. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.',
        r'Timeout': '–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç –≤–Ω–µ—à–Ω–µ–≥–æ API.',
        r'JSONDecodeError': '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ JSON –æ—Ç–≤–µ—Ç–∞ –æ—Ç API.',
        r'HTTPError': '–û—à–∏–±–∫–∞ HTTP –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ –≤–Ω–µ—à–Ω–µ–º—É API.',
        r'API –≤–µ—Ä–Ω—É–ª –æ—Ç–≤–µ—Ç –±–µ–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ': '–û—Ç–≤–µ—Ç API –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–∂–∏–¥–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –≤–æ–∑–º–æ–∂–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞.',
        r'ApiError': '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ —Å –≤–Ω–µ—à–Ω–∏–º API.',
        r'TelegramError': '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ —Å Telegram API.',
        r'–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç TELEGRAM_TOKEN': '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Ç–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ –≤ —Ñ–∞–π–ª–µ .env',
        r'–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç GEMINI_API_KEY': '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω API –∫–ª—é—á –¥–ª—è Google Gemini –≤ —Ñ–∞–π–ª–µ .env',
    }

    for log_file in sorted(log_files, reverse=True):
        try:
            log_path = os.path.join(log_dir, log_file) if os.path.exists(log_dir) else log_file
            with open(log_path, 'r', encoding='utf-8') as file:
                content = file.readlines()

                for line in content:
                    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –∏–∑–≤–µ—Å—Ç–Ω—ã–º –æ—à–∏–±–∫–∞–º
                    for pattern, comment in error_patterns.items():
                        if re.search(pattern, line):
                            line = line.strip() + f" => {comment}\n"
                            break

                    logs.append(line.strip())
        except Exception as e:
            logs.append(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –ª–æ–≥-—Ñ–∞–π–ª–∞ {log_file}: {e}")

    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ–≥–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 1000)
    return logs[-1000:]

@app.route('/')
def index():
    try:
        app.logger.info('–ó–∞–ø—Ä–æ—Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã')
        return HTML_TEMPLATE
    except Exception as e:
        app.logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}')
        return str(e), 500

@app.route('/download/presentation')
def download_presentation():
    """
    –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.
    """
    try:
        app.logger.info('–ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ static
        if not os.path.exists('static'):
            os.makedirs('static')
            app.logger.info('–°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è static')

        # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
        presentation_path = 'static/presentation.txt'

        # –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
        if not os.path.exists(presentation_path):
            app.logger.info('–§–∞–π–ª –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π')
            try:
                with open('presentation.md', 'r', encoding='utf-8') as md_file:
                    md_content = md_file.read()

                    # –£–ø—Ä–æ—â–∞–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è txt –≤–µ—Ä—Å–∏–∏
                    txt_content = md_content.replace('## ', '').replace('### ', '').replace('- ', '   - ')

                    with open(presentation_path, 'w', encoding='utf-8') as txt_file:
                        txt_file.write(txt_content)

                app.logger.info('–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞')
            except Exception as e:
                app.logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏: {e}')
                return f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏: {e}', 500

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        from flask import send_file
        return send_file(
            presentation_path, 
            as_attachment=True, 
            download_name='–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è_–±–æ—Ç–∞_–∏—Å—Ç–æ—Ä–∏–∏_–†–æ—Å—Å–∏–∏.txt',
            mimetype='text/plain'
        )
    except Exception as e:
        app.logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏: {e}')
        return f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏: {e}', 500

@app.route('/logs')
def logs():
    try:
        app.logger.info('–ó–∞–ø—Ä–æ—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ª–æ–≥–æ–≤')
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ —à–∞–±–ª–æ–Ω, JavaScript –æ–ø—Ä–µ–¥–µ–ª–∏—Ç, —á—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å
        return HTML_TEMPLATE
    except Exception as e:
        app.logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ª–æ–≥–æ–≤: {e}')
        return str(e), 500

@app.route('/api/logs')
def get_logs():
    try:
        app.logger.info('–ó–∞–ø—Ä–æ—Å API –ª–æ–≥–æ–≤')
        logs = read_logs()
        return jsonify({'logs': logs})
    except Exception as e:
        app.logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ª–æ–≥–æ–≤ —á–µ—Ä–µ–∑ API: {e}')
        return jsonify({'error': str(e)}), 500

@app.route('/api/chat', methods=['POST'])
def chat():
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç API –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è —á–∞—Ç–∞ —Å –±–æ—Ç–æ–º.

    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ–≥–æ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–µ–º–µ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏,
    –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –æ—Ç–≤–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON.

    Returns:
        JSON-–æ—Ç–≤–µ—Ç —Å —Ç–µ–∫—Å—Ç–æ–º –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ
    """
    try:
        app.logger.info('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å —á–∞—Ç–∞')
        data = request.json
        user_message = data.get('message', '')

        # –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        if not user_message:
            app.logger.warning('–ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å —á–∞—Ç–∞')
            return jsonify({'error': '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º'}), 400

        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞
        from main import ask_grok

        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∑–∞–ø—Ä–æ—Å –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        check_prompt = f"–ü—Ä–æ–≤–µ—Ä—å, –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –ª–∏ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏: \"{user_message}\". –û—Ç–≤–µ—Ç—å —Ç–æ–ª—å–∫–æ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'."
        is_history_related = ask_grok(check_prompt, max_tokens=50, temp=0.1).lower().strip()

        app.logger.info(f'–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–º—ã —Å–æ–æ–±—â–µ–Ω–∏—è: {is_history_related}')

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º—ã —Å–æ–æ–±—â–µ–Ω–∏—è
        if '–¥–∞' in is_history_related:
            # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏ - –æ—Ç–≤–µ—á–∞–µ–º –ø–æ —Å—É—â–µ—Å—Ç–≤—É
            prompt = (
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–¥–∞–ª –≤–æ–ø—Ä–æ—Å –Ω–∞ —Ç–µ–º—É –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏: \"{user_message}\"\n\n"
                "–û—Ç–≤–µ—Ç—å –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å, –æ–ø–∏—Ä–∞—è—Å—å –Ω–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç—ã. "
                "–ë—É–¥—å –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º, –Ω–æ –∫—Ä–∞—Ç–∫–∏–º. –ê–∫—Ü–µ–Ω—Ç–∏—Ä—É–π –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –Ω–∞–∏–±–æ–ª–µ–µ –≤–∞–∂–Ω—ã—Ö "
                "–∞—Å–ø–µ–∫—Ç–∞—Ö –∏ –¥–∞—Ç–∞—Ö, –æ—Ç–Ω–æ—Å—è—â–∏—Ö—Å—è –∫ –≤–æ–ø—Ä–æ—Å—É."
            )
        else:
            # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏ - –≤–µ–∂–ª–∏–≤–æ –æ—Ç–∫–∞–∑—ã–≤–∞–µ–º
            prompt = (
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–¥–∞–ª –≤–æ–ø—Ä–æ—Å –Ω–µ –æ—Ç–Ω–æ—Å—è—â–∏–π—Å—è –∫ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏: \"{user_message}\"\n\n"
                "–í–µ–∂–ª–∏–≤–æ –æ–±—ä—è—Å–Ω–∏, —á—Ç–æ —Ç—ã —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—à—å—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏, –∏ "
                "–ø—Ä–µ–¥–ª–æ–∂–∏ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å –∏—Å—Ç–æ—Ä–∏–µ–π –†–æ—Å—Å–∏–∏. "
                "–ü—Ä–∏–≤–µ–¥–∏ –ø—Ä–∏–º–µ—Ä –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–≥ –±—ã –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."
            )

        app.logger.info(f'–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_message[:50]}...' if len(user_message) > 50 else f'–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_message}')

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        bot_response = ask_grok(prompt, max_tokens=1024)

        # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏, –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        if '–¥–∞' not in is_history_related:
            bot_response = "‚ö†Ô∏è –Ø –º–æ–≥—É –æ–±—â–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ —Ç–µ–º—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∏—Å—Ç–æ—Ä–∏–µ–π –†–æ—Å—Å–∏–∏. ‚ö†Ô∏è\n\n" + bot_response

        app.logger.info('–û—Ç–≤–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ')

        return jsonify({'response': bot_response})
    except Exception as e:
        app.logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ —á–∞—Ç–∞: {e}')
        return jsonify({
            'error': str(e),
            'response': "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        }), 500

def run_flask():
    try:
        app.logger.info("–ó–∞–ø—É—Å–∫ Flask —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É 8080")
        app.run(host='0.0.0.0', port=8080, debug=False)
    except Exception as e:
        app.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Flask —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Flask —Å–µ—Ä–≤–µ—Ä–∞: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
def start_flask_server():
    try:
        flask_thread = threading.Thread(target=run_flask)
        flask_thread.daemon = True  # –ü–æ—Ç–æ–∫ –±—É–¥–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
        flask_thread.start()
        return flask_thread
    except Exception as e:
        app.logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ—Ç–æ–∫ –¥–ª—è Flask —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ—Ç–æ–∫ –¥–ª—è Flask —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        return None

if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫ Flask –Ω–∞–ø—Ä—è–º—É—é (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
    app.run(host='0.0.0.0', port=8080, debug=True)